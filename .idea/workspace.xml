<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="061ea5ed-5158-4b41-9f37-6b36b005802a" name="Changes" comment="Refactor to modularize and enhance database and logging setup&#10;&#10;Separated database, logging, and InfluxDB functionalities into dedicated modules under the `core` directory for better organization and reusability. Updated user model with UUIDs and timestamps while introducing `User` as the primary table. Replaced the utility-based `metric_core` with an OOP-based `InfluxDBWriter` class to improve maintainability.">
      <change afterPath="$PROJECT_DIR$/handler/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/handler/user_handler.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/enum/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/enum/fief_type_webhook.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/webhook_api.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/webhook_api.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/db_core.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/db_core.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/user_model.py" beforeDir="false" afterPath="$PROJECT_DIR$/model/user_model.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FastAPI main" />
        <option value="FastAPI test_main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="JsbtTreeLayoutManager">
    <layout place="tools.popupGrunt">
      <scroll-view-position x="0" y="0" />
    </layout>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2vnBDjEhSM4S8V6aMFs8yjzf4qM" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "FastAPI.art.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "C:/Users/pedro/PycharmProjects/FastAPIProject",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "ml.llm.mcp",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\pedro\PycharmProjects\art" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\pedro\PycharmProjects\art\core" />
      <recent name="C:\Users\pedro\PycharmProjects\art\api" />
    </key>
  </component>
  <component name="RunManager" selected="FastAPI.art">
    <configuration name="art" type="Python.FastAPI">
      <option name="file" value="$PROJECT_DIR$/main.py" />
      <module name="art" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-PY-251.23774.444" />
        <option value="bundled-python-sdk-890ed5b35930-d9c5bdb153f4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.23774.444" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="061ea5ed-5158-4b41-9f37-6b36b005802a" name="Changes" comment="" />
      <created>1744770839874</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744770839874</updated>
      <workItem from="1744770840914" duration="6864000" />
      <workItem from="1744853073284" duration="97000" />
      <workItem from="1744853254362" duration="21000" />
      <workItem from="1744853290558" duration="581000" />
      <workItem from="1744853892828" duration="132000" />
      <workItem from="1744854033772" duration="439000" />
      <workItem from="1744854487131" duration="8185000" />
    </task>
    <task id="LOCAL-00001" summary="Add FastAPI app with image generation and infrastructure setup&#10;&#10;Implemented a FastAPI app with an endpoint to generate images using a custom queue-based processing system. Added supporting files including `docker-compose.yaml` for infrastructure (Postgres, Redis, MinIO), a configuration file, and example HTTP tests. Initial project structure and dependencies were established, alongside IDE-specific configurations.">
      <option name="closed" value="true" />
      <created>1744771299702</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1744771299702</updated>
    </task>
    <task id="LOCAL-00002" summary="Add FastAPI app with image generation and infrastructure setup&#10;&#10;Introduced a FastAPI application with endpoints for image generation, user authentication, and webhook processing using modular routers. Added Docker Compose configuration for supporting infrastructure (InfluxDB, Redis, MinIO, Postgres) and included configuration management and environment variable handling utilities. Enhanced the project with a user model, request validation, and InfluxDB integration for logging.">
      <option name="closed" value="true" />
      <created>1744777367264</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1744777367264</updated>
    </task>
    <task id="LOCAL-00003" summary="Refactor and enhance prompt handling and logging features&#10;&#10;Refactored `comfy_core` to improve error handling, logging, and modularization for prompt execution and image generation. Introduced `logging_core` for centralized log management with rotation and cleanup. Updated `config.ini` and `config_core` to include logging configurations.">
      <option name="closed" value="true" />
      <created>1744859366959</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1744859366959</updated>
    </task>
    <task id="LOCAL-00004" summary="Refactor to modularize and enhance database and logging setup&#10;&#10;Separated database, logging, and InfluxDB functionalities into dedicated modules under the `core` directory for better organization and reusability. Updated user model with UUIDs and timestamps while introducing `User` as the primary table. Replaced the utility-based `metric_core` with an OOP-based `InfluxDBWriter` class to improve maintainability.">
      <option name="closed" value="true" />
      <created>1744861212667</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1744861212667</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add FastAPI app with image generation and infrastructure setup&#10;&#10;Implemented a FastAPI app with an endpoint to generate images using a custom queue-based processing system. Added supporting files including `docker-compose.yaml` for infrastructure (Postgres, Redis, MinIO), a configuration file, and example HTTP tests. Initial project structure and dependencies were established, alongside IDE-specific configurations." />
    <MESSAGE value="Add FastAPI app with image generation and infrastructure setup&#10;&#10;Introduced a FastAPI application with endpoints for image generation, user authentication, and webhook processing using modular routers. Added Docker Compose configuration for supporting infrastructure (InfluxDB, Redis, MinIO, Postgres) and included configuration management and environment variable handling utilities. Enhanced the project with a user model, request validation, and InfluxDB integration for logging." />
    <MESSAGE value="Refactor and enhance prompt handling and logging features&#10;&#10;Refactored `comfy_core` to improve error handling, logging, and modularization for prompt execution and image generation. Introduced `logging_core` for centralized log management with rotation and cleanup. Updated `config.ini` and `config_core` to include logging configurations." />
    <MESSAGE value="Refactor to modularize and enhance database and logging setup&#10;&#10;Separated database, logging, and InfluxDB functionalities into dedicated modules under the `core` directory for better organization and reusability. Updated user model with UUIDs and timestamps while introducing `User` as the primary table. Replaced the utility-based `metric_core` with an OOP-based `InfluxDBWriter` class to improve maintainability." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor to modularize and enhance database and logging setup&#10;&#10;Separated database, logging, and InfluxDB functionalities into dedicated modules under the `core` directory for better organization and reusability. Updated user model with UUIDs and timestamps while introducing `User` as the primary table. Replaced the utility-based `metric_core` with an OOP-based `InfluxDBWriter` class to improve maintainability." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/art$art.coverage" NAME="art Coverage Results" MODIFIED="1744862735754" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>